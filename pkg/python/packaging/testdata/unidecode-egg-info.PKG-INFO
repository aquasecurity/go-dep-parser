Metadata-Version: 1.1
Name: Unidecode
Version: 0.4.1
Summary: US-ASCII transliterations of Unicode text
Home-page: http://www.tablix.org/~avian/blog/archives/2009/01/unicode_transliteration_in_python/
Author: Tomaz Solc
Author-email: tomaz.solc@tablix.org
License: UNKNOWN
Description: 
        Unidecode
        =========
        
        ASCII transliterations of Unicode text
        
        Example Use
        -----------
        
        ::
        
        	from unidecode import unidecode
        	print unidecode(u"北亰")
        
        	# That prints: Bei Jing 
        
        Description
        -----------
        
        It often happens that you have non-Roman text data in Unicode, but
        you can't display it -- usually because you're trying to show it
        to a user via an application that doesn't support Unicode, or
        because the fonts you need aren't accessible. You could represent
        the Unicode characters as "???????" or "BAA0q0...", but
        that's nearly useless to the user who actually wants to read what
        the text says.
        
        What Unidecode provides is a function, 'unidecode(...)' that
        takes Unicode data and tries to represent it in ASCII characters 
        (i.e., the universally displayable characters between 0x00 and 0x7F). 
        The representation is almost always an attempt at *transliteration* 
        -- i.e., conveying, in Roman letters, the pronunciation expressed by 
        the text in some other writing system. (See the example above)
        
        This is a Python port of Text::Unidecode Perl module by 
        Sean M. Burke <sburke@cpan.org>.
              
Platform: UNKNOWN
Provides: unidecode
